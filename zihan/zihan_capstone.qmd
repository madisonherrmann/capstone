---
title: "zihan_capstone"
author: "Zihan Li"
institute: "University of Wisconsin-Madison"
date: December 13, 2024
format: 
  revealjs:
    scrollable: true
    css: slides.css
    slide-number: false 
title-slide-attributes:
  data-background-image: https://github.com/jjcurtin/lectures/blob/main/images/smartphone_know_you.png?raw=true
  data-background-size: 35%
  data-background-repeat: no
  data-background-position: left 10% bottom 10%
include-after: |
  <script type="text/javascript">
    Reveal.on('ready', event => {
      if (event.indexh === 0) {
        document.querySelector("div.has-logo > img.slide-logo").style.display = "block";
      if (event.indexh === 0) {
        document.querySelector("div.has-logo > img.slide-logo").style.display = "block";
      }
        Reveal.configure({ slideNumber: null });
        document.querySelector("div.has-logo > img.slide-logo").style.display = "none";
        Reveal.configure({ slideNumber: 'c' });
editor_options: 
  chunk_output_type: console
---

```{r}
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(dplyr)
library(kableExtra, exclude = c("group_rows"))
library(cowplot)
library(patchwork)

# devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true")
# devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")
# devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_plots.R?raw=true")
# devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/var_score.R?raw=true")

theme_set(theme_classic())
update_geom_defaults("bar", list(fill = "steelblue", color = "black"))
#update_geom_defaults("bar", list(fill = "steelblue"))
options(dplyr.print_max=Inf)


# path_processed <- format_path("studydata/risk2/data_processed/shared")

path_processed <-  "P:/studydata/risk2/data_processed/shared"

# plot setting
theme_set(theme_classic(base_size = 14)) 

```

```{r}
#| message: false
#| warning: false

# above the the way to set in quarto
# Read in data
intake <- read_csv(here::here(path_processed, "survey_intake_wide.csv"))
```

```{r}
abst_data <- intake |> 
  select(contains(paste0("recovery_", c(2:3), "_"))) |> 
  rename(Motivation = recovery_2_motivation,
         Efficacy = recovery_3_self_efficacy) |> 
  pivot_longer(cols = c("Motivation", "Efficacy"),
               names_to = 'Recovery',
               values_to = 'value') |> 
  group_by(Recovery, value) |> 
  summarise(n = n(), .groups = 'drop') |>  # Count the number of occurrences for each value
  group_by(Recovery) |> 
  mutate(prop = round(n / sum(n) * 100, 1)) |>  # Calculate the percentage for each value
  drop_na(value)

# Motivation
p_motivation <- abst_data |> 
  filter(Recovery == "Motivation") |> 
  ggplot(aes(x = value, y = n)) +
  geom_bar(stat = "identity") + 
  ylim(0, 200) +
  labs(title = "Opioid Avoidance Motivation",
       y = "Count",
       x = NULL) +
  theme(legend.position = "none",
        plot.title = element_text(hjust = 0.5))
```

## <span style="color: green; text-decoration: underline;">OUD Characteristics</span> 

::: {.columns}
:::: {.column width="45%"}
- 336 individuals mostly showed severe OUD symptoms.

\

- Motivated to abstinence throughout study
::::

:::: {.column width="55%"}
```{r}
# font just for this slide
theme_update(
  plot.title = element_text(hjust = 0.5, size = 24, face = "bold"), 
  axis.title = element_text(size = 22),                            
  axis.text = element_text(size = 20)
)

# severity
p_dsm <-  intake |> 
  drop_na(dsm_c) |> 
  mutate(dsm_category = case_when(
    dsm_c >= 0 & dsm_c <= 1 ~ "No Symptom",
    dsm_c >= 2 & dsm_c <= 3 ~ "Mild",
    dsm_c >= 4 & dsm_c <= 5 ~ "Moderate",
    dsm_c >= 6 ~ "Severe"
  )) |> 
  count(dsm_category) |> 
  mutate(dsm_category = factor(dsm_category, levels = c("No Symptom", "Mild", "Moderate", "Severe"))) |> 
  ggplot(aes(x = dsm_category, y = n)) +
  geom_bar(stat = "identity", width = 0.9) +  
  geom_text(aes(label = n), vjust = -0.5, size = 4, color = "black") +
  labs(x = NULL,
       y = "Count",
       title = "Severity of OUD Symptoms") +
  theme(legend.position = "none",
        plot.title = element_text(hjust = 0.5))

p_dsm
p_motivation
```
::::
:::


## <span style="color: green; text-decoration: underline;">OUD Characteristics</span> 

:::{.notes} 
-   Low income, moderate education
-   Balanced gender, mostly middle-aged
-   Majority Asian and White
:::

```{r}
# Update font for those
theme_update(
  plot.title = element_text(hjust = 0.5, size = 16, face = "bold"), 
  axis.title = element_text(size = 14),                            
  axis.text = element_text(size = 12)
)

# age
age_data <- intake %>%
  count(age)

p_age <- age_data |> 
  ggplot(aes(x = age, y = n)) +
  geom_bar(stat = "identity") +
  labs(x = NULL,
       y = "Count",
       title = "Age") +
  theme(legend.position="none",
        plot.title = element_text(hjust = 0.5)) 

# gender
gender_data <- intake |> 
  select(gender) |> 
  mutate(gender = case_when(
    gender %in% c("Not listed above", "Non-binary") ~ "Non-binary",
    gender == "Prefer not to say" ~ NA,
    TRUE ~ gender
  )) |> 
  drop_na(gender) |> 
  count(gender) |> 
  mutate(prop = round(n / sum(n) * 100, 1)) |>  # Calculate percentage
  arrange(desc(n)) |>  # Sort by count in descending order
  mutate(gender = factor(gender, levels = gender))  # Ensure factor levels match descending order

# Plot the pie chart
p_gender <- gender_data |> 
  ggplot(aes(x = "", y = n, fill = gender)) +
  geom_bar(width = 1, stat = "identity", color = "white") +  # Draw bar segments for each gender
  coord_polar("y", start = 0) +  # Convert to polar coordinates to create a pie chart
  theme_void() +  # Remove background elements for a clean pie chart
  labs(title = "Gender",
       fill = "Gender") +  
  geom_text(aes(label = gender), position = position_stack(vjust = 0.5)) +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none")  # Center the title

# race
p_race <- intake |> 
  select(subid, starts_with("race")) |> 
  select(-contains("text")) |> 
  pivot_longer(starts_with("race"),
               names_to = "race",
               values_to = "chosen") |> 
  mutate(chosen = factor(chosen, levels = c("no", "yes", NA)),
         race = str_replace(race, "race_", "")) |> 
  mutate(race = case_when(
    race %in% c("native_hawaiian_other", "not_listed", "american_indian_alaska_native") ~ "other",
    TRUE ~ race
  )) |> 
  group_by(race) |> 
  count(chosen) |> 
  filter(chosen == "yes") |> 
  arrange(desc(n)) |> 
  mutate(race = str_replace_all(race, "_", " "),  
         race = str_to_title(race)) |> 
  mutate(race = factor(race, levels = c("Asian",
                                        "White",
                                        "Black",
                                        "Hispanic", 
                                        "Other"))) |> 
  ggplot(aes(x = race, y = n)) +
  geom_bar(stat = "identity") +
  scale_x_discrete(labels = function(x) str_replace_all(x, " ", "\n")) +
  labs(title = "Race or Ethnic Origin",
       x = NULL,
       y = "Count") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 0, hjust = 0.4),
        legend.position = "none") 

# education
edu_data <- intake |> 
  select(education) |>  # Calculate percentage |> 
  mutate(education = case_when(
    education %in% c("8th grade or less", "Some high school, but did not graduate", "High school graduate or GED") ~ "<= High school",
    education == "Some college or 2-year degree" ~ "Some College",
    education == "4-year college graduate" ~ "4-year college degree",
    education == "More than 4-year or advanced degree" ~ "Advanced degree",
  )) |> 
  mutate(education = factor(education, levels = c("<= High school",
                                                  "Some College",
                                                  "4-year college degree",
                                                  "Advanced degree"))) |> 
  drop_na(education) |> 
  count(education) |> 
  mutate(prop = round(n / sum(n) * 100, 1))

p_edu_bar <- edu_data |> 
  ggplot(aes(x = education, y = n)) +
  geom_bar(width = 0.9, stat = "identity") +
  scale_x_discrete(labels = function(x) str_replace_all(x, " ", "\n")) +  # Add line breaks to make labels more readable
  labs(title = "Education Level",
       x = NULL,
       y = "Count") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none")  # Center the plot title and remove the legend

# income
income_data <- intake |> 
  drop_na(income) |> 
  mutate(income = factor(income,
                         levels = c("Less than $25,000",
                                    "$25,000 - $34, 999",
                                    "$35,000 - $49,999",
                                    "$50,000 - $74, 999",
                                    "$75, 000 - $99, 999",
                                    "$100,000 - $149,999",
                                    "$150, 000 - $199,999",
                                    "$200, 000 or more"))) |> 
  mutate(income = case_when(
    income == "Less than $25,000" ~ "Less than $25k",
    income %in% c("$25,000 - $34, 999", "$35,000 - $49,999", "$50,000 - $74, 999") ~ "$25~75k",
    income %in% c("$75, 000 - $99, 999", "$100,000 - $149,999", "$150, 000 - $199,999") ~ "$75~200k",
    income == "$200, 000 or more" ~ "More than $200k"
  )) |> 
  count(income) |> 
  mutate(income = factor(income, levels = c("Less than $25k", "$25~75k", "$75~200k", "More than $200k"))) |> 
  mutate(prop = round(n / sum(n) * 100, 1))  # Calculate percentage

p_income_bar <- income_data |> 
  ggplot(aes(x = income, y = n)) +
  geom_bar(width = 0.9, stat = "identity") +  # Use stat = "identity" since we're using pre-counted data
  labs(y = "Count",
       x = NULL,
       title = "Income") +
  theme(legend.position = "none",  # Hide legend
        plot.title = element_text(hjust = 0.5),  # Center title
        axis.text.x = element_text(angle = 20, hjust = 1))  # Adjust x-axis label angle

# show
combined_plot <- (p_age + p_gender + p_edu_bar) / (p_race + p_income_bar)  
combined_plot
```
