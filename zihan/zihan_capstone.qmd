---
title: "zihan_capstone"
author: "Zihan Li"
institute: "University of Wisconsin-Madison"
date: December 13, 2024
format: 
  revealjs:
    scrollable: true
    css: chm.css
    slide-number: false 
title-slide-attributes:
  data-background-image: https://github.com/jjcurtin/lectures/blob/main/images/smartphone_know_you.png?raw=true
  data-background-size: 30%
  data-background-repeat: no
  data-background-position: left 10% bottom 10%
include-after: |
  <style>
    /* Apply custom styles only to the title slide */
    }
    }
    }
    }
    }
    });
  <script type="text/javascript">
    .reveal .slides > section:first-of-type h1 {
      color: blue;         /* Title color */
      font-size: 4rem;     /* Larger font size */
      text-align: center;  /* Center align the title */
      font-weight: bold;   /* Bold text */
    .reveal .slides > section:first-of-type h2 {
      font-size: 1.5rem;   /* Smaller font for author */
      text-align: center;  /* Center align the author */
    .reveal .slides > section:first-of-type h3 {
      font-size: 1.2rem;   /* Smaller font for institute */
      text-align: center;  /* Center align the institute */
    .reveal .slides > section:first-of-type h4 {
      font-size: 1rem;     /* Small font for date */
      text-align: center;  /* Center align the date */
    .reveal .slides > section:first-of-type {
      }
      padding-top: 2rem;   /* Adds space at the top */
    Reveal.on('ready', event => {
      if (event.indexh === 0) {
        document.querySelector("div.has-logo > img.slide-logo").style.display = "block";
        document.querySelector("div.has-logo > img.slide-logo").style.display = "none";
        Reveal.configure({ slideNumber: null });
        Reveal.configure({ slideNumber: 'c' });
editor_options: 
  chunk_output_type: console
---


```{r}
#| echo: false
#| message: false
#| warning: false

library(tidyverse)
library(dplyr)
library(kableExtra, exclude = c("group_rows"))
library(cowplot)
library(patchwork)

# devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_eda.R?raw=true")
# devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/format_path.R?raw=true")
# devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/fun_plots.R?raw=true")
# devtools::source_url("https://github.com/jjcurtin/lab_support/blob/main/var_score.R?raw=true")
theme_set(theme_classic())
#update_geom_defaults("bar", list(fill = "steelblue"))
options(dplyr.print_max=Inf)


# path_processed <- format_path("studydata/risk2/data_processed/shared")

path_processed <-  "P:/studydata/risk2/data_processed/shared"
```

```{r}
#| message: false
#| warning: false

# above the the way to set in quarto
# Read in data
intake <- read_csv(here::here(path_processed, "survey_intake_wide.csv"))
```

## OUD Symptoms

-   The participants mostly met all criteria in OUD evaluation.

```{r}
p_dsm <-  intake |> 
  drop_na(dsm_c) |> 
  mutate(dsm_category = case_when(
    dsm_c >= 0 & dsm_c <= 1 ~ "No Symptom",
    dsm_c >= 2 & dsm_c <= 3 ~ "Mild",
    dsm_c >= 4 & dsm_c <= 5 ~ "Moderate",
    dsm_c >= 6 ~ "Severe"
  )) |> 
  count(dsm_category) |> 
  mutate(dsm_category = factor(dsm_category, levels = c("No Symptom", "Mild", "Moderate", "Severe"))) |> 
  ggplot(aes(x = dsm_category, y = n)) +
  geom_bar(stat = "identity", width = 0.9, fill = "lightblue") +  
  geom_text(aes(label = n), vjust = -0.5, size = 4, color = "black") +
  labs(x = "OUD(DSM) Symptoms",
       y = "Number of Participants",
       title = "Distribution of the OUD(DSM) Number of Symptoms") +
  theme(legend.position = "none",
        plot.title = element_text(hjust = 0.5))

p_dsm
```

## Important demographics

-   Race: The majority identified themselves as Asian or white
-   Income: Low income
-   Education: Participants on the average received intermediate education
-   Gender: Most oft the participants identified themselves as male/female
-   Age: Most participants are in the **26-35 (128)** and **36-45 (64)** age groups

## Important demographics

```{r}
# age
age_counts <- intake %>%
  count(age)

p_age <- intake |> 
  ggplot(aes(x = age)) +
  geom_bar(width = 0.9, fill = "lightblue") +
  labs(x = NULL,
       y = "Number of Participants",
       title = "Age") +
  theme(legend.position="none",
        plot.title = element_text(hjust = 0.5)) 

# gender
gender_data <- intake |> 
  select(gender) |> 
  mutate(gender = case_when(
    gender %in% c("Not listed above", "Non-binary") ~ "Non-binary",
    gender == "Prefer not to say" ~ NA,
    TRUE ~ gender
  )) |> 
  drop_na(gender) |> 
  count(gender) |> 
  mutate(prop = round(n / sum(n) * 100, 1)) |>  # Calculate percentage
  arrange(desc(n)) |>  # Sort by count in descending order
  mutate(gender = factor(gender, levels = gender))  # Ensure factor levels match descending order

# Plot the pie chart
p_gender <- gender_data |> 
  ggplot(aes(x = "", y = n, fill = gender)) +
  geom_bar(width = 1, stat = "identity", color = "white") +  # Draw bar segments for each gender
  coord_polar("y", start = 0) +  # Convert to polar coordinates to create a pie chart
  theme_void() +  # Remove background elements for a clean pie chart
  labs(title = "Gender",
       fill = "Gender") +  
  theme(plot.title = element_text(hjust = 0.5))  # Center the title

# race
p_race <- intake |>
  select(subid, starts_with("race")) |> 
  select(-contains("text")) |> 
  pivot_longer(starts_with("race"),
               names_to = "race",
               values_to = "chosen") |>
  mutate(chosen = factor(chosen, levels = c("no", "yes", NA)),
         race = str_replace(race, "race_", "")) |>
  group_by(race) |>
  count(chosen) |> 
  filter(chosen == "yes") |> 
  arrange(desc(n)) |> 
  mutate(race = str_replace_all(race, "_", " "),  
         race = str_to_title(race)) |> 
  mutate(race = factor(race, levels = c("Asian",
                                        "White",
                                        "Black",
                                        "Hispanic", 
                                        "American Indian Alaska Native",
                                        "Not Listed", 
                                        "Native Hawaiian Other"))) |> 
  ggplot(aes(x = race, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue") +
  scale_x_discrete(labels = function(x) str_replace_all(x, " ", "\n")) +
  labs(title = "Race or Ethnic Origin",
       x = NULL,
       y = "Number of Participants") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 0, hjust = 0.4),
        legend.position = "none") 

# education
edu_data <- intake |> 
  select(education) |>  # Calculate percentage |> 
  mutate(education = case_when(
    education %in% c("Some high school, but did not graduate", "High school graduate or GED") ~ "High school",
    education %in% c("Some college or 2-year degree", "4-year college graduate") ~ "College",
    education == "More than 4-year or advanced degree" ~ "Advanced degree",
    TRUE ~ education
  )) |> 
  mutate(education = factor(education, levels = c("8th grade or less",
                                                  "High school",
                                                  "College",
                                                  "Advanced degree"))) |> 
  drop_na(education) |> 
  count(education) |> 
  mutate(prop = round(n / sum(n) * 100, 1))

p_edu_bar <- edu_data |> 
  ggplot(aes(x = education, y = n)) +
  geom_bar(width = 1, stat = "identity", fill = "lightblue", color = "white") +
  scale_x_discrete(labels = function(x) str_replace_all(x, " ", "\n")) +  # Add line breaks to make labels more readable
  labs(title = "Education Level",
       x = NULL,
       y = "Number of Participants") +
  theme(plot.title = element_text(hjust = 0.5),
        legend.position = "none")  # Center the plot title and remove the legend

# income
income_data <- intake |> 
  drop_na(income) |> 
  mutate(income = factor(income,
                         levels = c("Less than $25,000",
                                    "$25,000 - $34, 999",
                                    "$35,000 - $49,999",
                                    "$50,000 - $74, 999",
                                    "$75, 000 - $99, 999",
                                    "$100,000 - $149,999",
                                    "$150, 000 - $199,999",
                                    "$200, 000 or more"))) |> 
  mutate(income = case_when(
    income == "Less than $25,000" ~ "Less than $25k",
    income %in% c("$25,000 - $34, 999", "$35,000 - $49,999", "$50,000 - $74, 999") ~ "$25~75k",
    income %in% c("$75, 000 - $99, 999", "$100,000 - $149,999", "$150, 000 - $199,999") ~ "$75~200k",
    income == "$200, 000 or more" ~ "More than $200k"
  )) |> 
  count(income) |> 
  mutate(income = factor(income, levels = c("Less than $25k", "$25~75k", "$75~200k", "More than $200k"))) |> 
  mutate(prop = round(n / sum(n) * 100, 1))  # Calculate percentage

p_income_bar <- income_data |> 
  ggplot(aes(x = income, y = n)) +
  geom_bar(width = 0.9, stat = "identity", fill = "lightblue") +  # Use stat = "identity" since we're using pre-counted data
  labs(y = "Number of Participants",
       x = NULL,
       title = "Income") +
  theme(legend.position = "none",  # Hide legend
        plot.title = element_text(hjust = 0.5),  # Center title
        axis.text.x = element_text(angle = 20, hjust = 1))  # Adjust x-axis label angle

# show
combined_plot <- (p_age + p_gender + p_edu_bar) / (p_race + p_income_bar)  
combined_plot
```

## General Living Arrangement

-   The majority of the participants live with family or in a recovery community.

```{r}
# general
liv_arr_data <- intake |> 
  drop_na(living_arrangement_1) |> 
  select(subid, living_arrangement_1) |> 
  count(living_arrangement_1) |> 
  arrange(desc(n)) |> 
  mutate(prop = round(n / sum(n) * 100, 1)) |> 
  mutate(living_arrangement_1 = case_when(
    living_arrangement_1 == "Recovery community (Sober living/halfway house)" ~ "Recovery community",
    living_arrangement_1 %in% c("Homeless shelter", "Homeless unsheltered") ~ "Homeless",
    TRUE ~ living_arrangement_1
  )) |> 
  mutate(living_arrangement_1 = factor(living_arrangement_1,
                                       levels = c("Living with family/others",
                                                  "Recovery community",
                                                  "Living alone",
                                                  "Other",
                                                  "Homeless")))

# Plot the bar chart with percentage labels above the bars
p_liv_arr_1 <- liv_arr_data |> 
  ggplot(aes(x = living_arrangement_1, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue") +
  scale_x_discrete(labels = function(x) str_replace_all(x, " ", "\n")) +  # Add line breaks to make labels more readable
  labs(x = "General Living Arrangement",
       y = "Number of Participants",
       title = "Living Arrangement of the Participants") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 0, hjust = 0.4),
        legend.position = "none")

# who to live with
liv_arr_2_data <- intake |>
  select(subid, starts_with("living_arrangement_2")) |> 
  select(-contains("text")) |> 
  pivot_longer(starts_with("living_arrangement_2"),
               names_to = "living_arrangement_2",
               values_to = "chosen") |>
  mutate(chosen = factor(chosen, levels = c("no", "yes", NA)),
         living_arrangement_2 = str_replace(living_arrangement_2, "living_arrangement_2_", "")) |>
  group_by(living_arrangement_2) |>
  count(chosen) |> 
  filter(chosen == "yes") |> 
  arrange(desc(n)) |> 
  mutate(living_arrangement_2 = str_replace_all(living_arrangement_2, "_", " "),  
         living_arrangement_2 = str_to_title(living_arrangement_2)) |> 
  mutate(living_arrangement_2 = factor(living_arrangement_2, levels = c("Spouse Sig Other",
                                        "Non Relative",
                                        "Child Grandchild",
                                        "Parent",
                                        "Other Relative")))

# Plot the bar chart with count labels above the bars
p_liv_arr_2 <- liv_arr_2_data |> 
  ggplot(aes(x = living_arrangement_2, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue") +
  labs(title = "Living Arrangement Distribution of Participants",
       x = "Living Arrangement: Partners",
       y = "Number of Participants") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 0, hjust = 0.4),
        legend.position = "none") 

combined_plot <- p_liv_arr_1 + p_liv_arr_2
combined_plot
```

## Attitude of the Participants on Abstince

-   Most of the participants showed high intention to avoid substance usage.

```{r}
abst_data <- intake |> 
  select(contains(paste0("recovery_", c(2:3), "_"))) |> 
  rename(Motivation = recovery_2_motivation,
         Efficacy = recovery_3_self_efficacy) |> 
  pivot_longer(cols = c("Motivation", "Efficacy"),
               names_to = 'Recovery',
               values_to = 'value') |> 
  group_by(Recovery, value) |> 
  summarise(n = n(), .groups = 'drop') |>  # Count the number of occurrences for each value
  group_by(Recovery) |> 
  mutate(prop = round(n / sum(n) * 100, 1))  # Calculate the percentage for each value

# Plot the faceted bar chart with percentage labels
p_abstince <- abst_data |> 
  ggplot(aes(x = value, y = n)) +
  geom_bar(stat = "identity", fill = "lightblue") +
  facet_wrap(~Recovery, ncol = 1, scales = "free_y") +
  ylim(0, 200) +
  labs(x = "Evaluated Scores for Abstinence Attitude",
       y = "Number of Participants",
       title = "Scores of Abstinence Goals") +
  theme(legend.position = "none",
        plot.title = element_text(hjust = 0.5))

# what other drug to quit
p_rec_4_1 <- intake |> 
  select(-ends_with("text")) |> 
  select(contains("recovery_4_1")) |> 
  pivot_longer(starts_with("recovery_4_1"),
               names_to = "recovery_4_1",
               values_to = "chosen") |>
  mutate(chosen = factor(chosen, levels = c("no", "yes", NA)),
         recovery_4_1 = str_replace(recovery_4_1, "recovery_4_1_", "")) |>
  group_by(recovery_4_1) |>
  count(chosen) |> 
  filter(chosen == "yes") |> 
  arrange(desc(n)) |> 
  mutate(recovery_4_1 = str_replace_all(recovery_4_1, "_", " "),  
         recovery_4_1 = str_to_title(recovery_4_1)) |> 
  mutate(recovery_4_1 = factor(recovery_4_1, levels = c("Stimulants",
                                                        "Alcohol",
                                                        "Sedatives",
                                                        "Cannabis",
                                                        "Hallucinogens",
                                                        "Inhalants",
                                                        "Tobacco",
                                                        "Ecig",
                                                        "Other"))) |> 
  ggplot(aes(x = recovery_4_1, y = n, fill = n)) +
  geom_bar(stat = "identity", fill = "lightblue") +
  scale_x_discrete(labels = function(x) str_replace_all(x, " ", "\n")) +
  labs(title = "Other Substance Intended to Avoid",
       x = "Substance",
       y = "Number of Participants") +
  theme(plot.title = element_text(hjust = 0.5),
        axis.text.x = element_text(angle = 0, hjust = 0.4),
        legend.position = "none") 

combined_plot <- p_abstince 

combined_plot
```
